import{_ as s,c as a,a as p,o as t}from"./app-DiLZv8uf.js";const o={};function e(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="集成三方-web-框架" tabindex="-1"><a class="header-anchor" href="#集成三方-web-框架"><span>集成三方 web 框架</span></a></h1><blockquote><p><a href="https://juejin.cn/post/7172470244009590815" target="_blank" rel="noopener noreferrer">Kratos 大乱炖 —— 整合其他 Web 框架:Gin、FastHttp、Hertz - 掘金</a></p></blockquote><p>Kratos 默认的 RPC 框架使用的是 gRPC，支持 REST 和 protobuf 两种通讯协议。其 API 都是使用 protobuf 定义的，REST 协议是通过 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fgrpc-ecosystem%2Fgrpc-gateway" target="_blank" rel="noopener noreferrer">grpc-gateway</a> 转译实现的。使用 protobuf 定义 API 是具有极大优点的，具有很强的可读性、可维护性，以及工程性。工程再大，人员再多，也不会乱。</p><p>一切看起来都是很美好的。那么，问题来了，我们现在使用的是其他的 Web 框架，迁移就会有成本，有风险，不可能一下子就把历史存在的代码一口气转换过来到 Kratos 框架。那我可以在 Kratos 中整合其他的 Web 框架做过渡吗？答案是：可以的。Kratos 是基于的插件化设计，万物皆可插。</p><p>我整合了主流的 Gin 和 FastHttp。顺便把字节跳动的 Hertz 也尝试着整合了一下。整合之后，使用起来毫无违和感。</p><h2 id="gin" tabindex="-1"><a class="header-anchor" href="#gin"><span>Gin</span></a></h2><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgin-gonic.com%2F" target="_blank" rel="noopener noreferrer">Gin</a> 是用 Go 编写的一个 Web 应用框架，对比其它主流的同类框架，他有更好的性能和更快的路由。由于其本身只是在官方 net/http 包的基础上做的完善，所以理解和上手很平滑。</p><p>封装的代码如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code><span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">package</span><span class="token operator">*</span><span class="token operator">*</span> gin</span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">import</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token string">&quot;context&quot;</span>&quot;crypto<span class="token operator">/</span>tls<span class="token string">&quot;&quot;</span>net<span class="token operator">/</span>http<span class="token string">&quot;&quot;</span>net<span class="token operator">/</span>url<span class="token string">&quot;&quot;</span>time<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>gin<span class="token operator">-</span>gonic<span class="token operator">/</span>gin<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>errors<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>log<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>middleware<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>transport&quot;</span>
<span class="line">        kHttp <span class="token string">&quot;github.com/go-kratos/kratos/v2/transport/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token boolean">_</span> transport<span class="token punctuation">.</span>Server     <span class="token operator">=</span> <span class="token punctuation">(</span>_Server<span class="token punctuation">)</span><span class="token punctuation">(</span>__nil__<span class="token punctuation">)</span></span>
<span class="line">__        <span class="token boolean">_</span> transport<span class="token punctuation">.</span>Endpointer <span class="token operator">=</span> <span class="token punctuation">(</span>_Server<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">type</span><span class="token operator">*</span><span class="token operator">*</span> Server <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">struct</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        _gin<span class="token punctuation">.</span>Engine</span>
<span class="line">__        server _http<span class="token punctuation">.</span>Server</span>
<span class="line"></span>
<span class="line">        tlsConf  _tls<span class="token punctuation">.</span>Config</span>
<span class="line">__        endpoint _url<span class="token punctuation">.</span>URL</span>
<span class="line">        timeout  time<span class="token punctuation">.</span>Duration</span>
<span class="line">        addr     <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"></span>
<span class="line">        err <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"></span>
<span class="line">        filters <span class="token punctuation">[</span><span class="token punctuation">]</span>kHttp<span class="token punctuation">.</span>FilterFunc</span>
<span class="line">        ms      <span class="token punctuation">[</span><span class="token punctuation">]</span>middleware<span class="token punctuation">.</span>Middleware</span>
<span class="line">        dec     kHttp<span class="token punctuation">.</span>DecodeRequestFunc</span>
<span class="line">        enc     kHttp<span class="token punctuation">.</span>EncodeResponseFunc</span>
<span class="line">        ene     kHttp<span class="token punctuation">.</span>EncodeErrorFunc</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span>NewServer<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>opts <span class="token operator">...</span>ServerOption<span class="token punctuation">)</span> _Server <span class="token punctuation">{</span></span>
<span class="line">        srv <span class="token operator">:=</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">{</span></span>
<span class="line">__                timeout<span class="token punctuation">:</span> __1__ <span class="token boolean">_</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span></span>
<span class="line">                dec<span class="token punctuation">:</span>     kHttp<span class="token punctuation">.</span>DefaultRequestDecoder<span class="token punctuation">,</span></span>
<span class="line">                enc<span class="token punctuation">:</span>     kHttp<span class="token punctuation">.</span>DefaultResponseEncoder<span class="token punctuation">,</span></span>
<span class="line">                ene<span class="token punctuation">:</span>     kHttp<span class="token punctuation">.</span>DefaultErrorEncoder<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        srv<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>opts<span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> srv</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">init</span><span class="token punctuation">(</span>opts <span class="token operator">...</span>ServerOption<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span>Engine <span class="token operator">=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">for</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token boolean">_</span><span class="token punctuation">,</span> o <span class="token operator">:=</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">range</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> opts <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">o</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>server <span class="token operator">=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span></span>
<span class="line">                Addr<span class="token punctuation">:</span>      s<span class="token punctuation">.</span>addr<span class="token punctuation">,</span></span>
<span class="line">                Handler<span class="token punctuation">:</span>   s<span class="token punctuation">.</span>Engine<span class="token punctuation">,</span></span>
<span class="line">                TLSConfig<span class="token punctuation">:</span> s<span class="token punctuation">.</span>tlsConf<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Endpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>_url<span class="token punctuation">.</span>URL<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> s<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> __nil__</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Start</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">&quot;[GIN] server listening on: %s&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> s<span class="token punctuation">.</span>tlsConf <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">                err <span class="token operator">=</span> s<span class="token punctuation">.</span>server<span class="token punctuation">.</span><span class="token function">ListenAndServeTLS</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">else</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">                err <span class="token operator">=</span> s<span class="token punctuation">.</span>server<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> http<span class="token punctuation">.</span>ErrServerClosed<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> err</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Stop</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">{</span></span>
<span class="line">__        log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span>__<span class="token string">&quot;[GIN] server stopping&quot;</span>__<span class="token punctuation">)</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> s<span class="token punctuation">.</span>server<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">ServeHTTP</span><span class="token punctuation">(</span>res http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span>Engine<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> req<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">复制代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用的代码如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code><span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">package</span><span class="token operator">*</span><span class="token operator">*</span> gin</span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">import</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;context&quot;</span>&quot;math<span class="token operator">/</span>rand<span class="token string">&quot;&quot;</span>strconv<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>gin<span class="token operator">-</span>gonic<span class="token operator">/</span>gin&quot;</span>
<span class="line">    transport <span class="token string">&quot;github.com/tx7do/kratos-transport/gin&quot;</span></span>
<span class="line">    </span>
<span class="line">    api <span class="token string">&quot;github.com/tx7do/kratos-transport/_example/api/protobuf&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span>main<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv <span class="token operator">:=</span> transport<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">WithAddress</span><span class="token punctuation">(</span><span class="token string">&quot;:8800&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    srv<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/login/_param&quot;</span>__<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">(</span>c _gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Params<span class="token punctuation">.</span><span class="token function">ByName</span><span class="token punctuation">(</span><span class="token string">&quot;param&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token punctuation">{</span></span>
<span class="line">            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hygrothermograph&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> out api<span class="token punctuation">.</span>Hygrothermograph</span>
<span class="line">        out<span class="token punctuation">.</span>Humidity <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">int64</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">        out<span class="token punctuation">.</span>Temperature <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">int64</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>out<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">defer</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;expected nil got %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">复制代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fasthttp" tabindex="-1"><a class="header-anchor" href="#fasthttp"><span>FastHttp</span></a></h2><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fvalyala%2Ffasthttp" target="_blank" rel="noopener noreferrer">FastHTTP</a> 是 golang 下的一个 http 框架，顾名思义，与原生的 http 实现相比，它的特点在于快，按照官网的说法，它的客户端和服务端性能比原生有了十倍的提升。</p><p>它的高性能主要源自于“复用”，通过服务协程和内存变量的复用，节省了大量资源分配的成本。</p><p>封装的代码如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code><span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">package</span><span class="token operator">*</span><span class="token operator">*</span> fasthttp</span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">import</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token string">&quot;context&quot;</span>&quot;crypto<span class="token operator">/</span>tls<span class="token string">&quot;&quot;</span>net<span class="token operator">/</span>http<span class="token string">&quot;&quot;</span>net<span class="token operator">/</span>url<span class="token string">&quot;&quot;</span>time<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>fasthttp<span class="token operator">/</span>router<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>valyala<span class="token operator">/</span>fasthttp<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>errors<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>log<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>middleware<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>transport&quot;</span>
<span class="line">        kHttp <span class="token string">&quot;github.com/go-kratos/kratos/v2/transport/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token boolean">_</span> transport<span class="token punctuation">.</span>Server     <span class="token operator">=</span> <span class="token punctuation">(</span>_Server<span class="token punctuation">)</span><span class="token punctuation">(</span>__nil__<span class="token punctuation">)</span></span>
<span class="line">__        <span class="token boolean">_</span> transport<span class="token punctuation">.</span>Endpointer <span class="token operator">=</span> <span class="token punctuation">(</span>_Server<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">type</span><span class="token operator">*</span><span class="token operator">*</span> Server <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">struct</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        _fasthttp<span class="token punctuation">.</span>Server</span>
<span class="line"></span>
<span class="line">__        tlsConf  _tls<span class="token punctuation">.</span>Config</span>
<span class="line">        endpoint _url<span class="token punctuation">.</span>URL</span>
<span class="line">        timeout  time<span class="token punctuation">.</span>Duration</span>
<span class="line">__        addr     <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span></span>
<span class="line"></span>
<span class="line">__        err <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span></span>
<span class="line"></span>
<span class="line">        filters <span class="token punctuation">[</span><span class="token punctuation">]</span>FilterFunc</span>
<span class="line">        ms      <span class="token punctuation">[</span><span class="token punctuation">]</span>middleware<span class="token punctuation">.</span>Middleware</span>
<span class="line">        dec     kHttp<span class="token punctuation">.</span>DecodeRequestFunc</span>
<span class="line">        enc     kHttp<span class="token punctuation">.</span>EncodeResponseFunc</span>
<span class="line">        ene     kHttp<span class="token punctuation">.</span>EncodeErrorFunc</span>
<span class="line"></span>
<span class="line">__        strictSlash <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">bool</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span></span>
<span class="line">__        router      _router<span class="token punctuation">.</span>Router</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span>NewServer<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>opts <span class="token operator">...</span>ServerOption<span class="token punctuation">)</span> _Server <span class="token punctuation">{</span></span>
<span class="line">        srv <span class="token operator">:=</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">{</span></span>
<span class="line">__                timeout<span class="token punctuation">:</span>     __1__ <span class="token boolean">_</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span></span>
<span class="line">                dec<span class="token punctuation">:</span>         kHttp<span class="token punctuation">.</span>DefaultRequestDecoder<span class="token punctuation">,</span></span>
<span class="line">                enc<span class="token punctuation">:</span>         kHttp<span class="token punctuation">.</span>DefaultResponseEncoder<span class="token punctuation">,</span></span>
<span class="line">                ene<span class="token punctuation">:</span>         kHttp<span class="token punctuation">.</span>DefaultErrorEncoder<span class="token punctuation">,</span></span>
<span class="line">                strictSlash<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">                router<span class="token punctuation">:</span>      router<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        srv<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>opts<span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> srv</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">init</span><span class="token punctuation">(</span>opts <span class="token operator">...</span>ServerOption<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">for</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token boolean">_</span><span class="token punctuation">,</span> o <span class="token operator">:=</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">range</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> opts <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">o</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>Server <span class="token operator">=</span> <span class="token operator">&amp;</span>fasthttp<span class="token punctuation">.</span>Server<span class="token punctuation">{</span></span>
<span class="line">                TLSConfig<span class="token punctuation">:</span> s<span class="token punctuation">.</span>tlsConf<span class="token punctuation">,</span></span>
<span class="line">                Handler<span class="token punctuation">:</span>   <span class="token function">FilterChain</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>filters<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>router<span class="token punctuation">.</span>Handler<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>router<span class="token punctuation">.</span>RedirectTrailingSlash <span class="token operator">=</span> s<span class="token punctuation">.</span>strictSlash</span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Endpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>_url<span class="token punctuation">.</span>URL<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> s<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> __nil__</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Start</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">&quot;[fasthttp] server listening on: %s&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> s<span class="token punctuation">.</span>tlsConf <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">                err <span class="token operator">=</span> s<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">ListenAndServeTLS</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>addr<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">else</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">                err <span class="token operator">=</span> s<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">!</span>errors<span class="token punctuation">.</span><span class="token function">Is</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> http<span class="token punctuation">.</span>ErrServerClosed<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> err</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Stop</span><span class="token punctuation">(</span><span class="token boolean">_</span> context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">{</span></span>
<span class="line">__        log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span>__<span class="token string">&quot;[fasthttp] server stopping&quot;</span>__<span class="token punctuation">)</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> s<span class="token punctuation">.</span>Server<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Handle</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> path <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">GET</span><span class="token punctuation">(</span>path <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodGet<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">HEAD</span><span class="token punctuation">(</span>path <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodHead<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">POST</span><span class="token punctuation">(</span>path <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodPost<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">PUT</span><span class="token punctuation">(</span>path <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodPut<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">PATCH</span><span class="token punctuation">(</span>path <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodPatch<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">DELETE</span><span class="token punctuation">(</span>path <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodDelete<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">CONNECT</span><span class="token punctuation">(</span>path <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodConnect<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">OPTIONS</span><span class="token punctuation">(</span>path <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodOptions<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">TRACE</span><span class="token punctuation">(</span>path <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> handler fasthttp<span class="token punctuation">.</span>RequestHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        s<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span>fasthttp<span class="token punctuation">.</span>MethodTrace<span class="token punctuation">,</span> path<span class="token punctuation">,</span> handler<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">复制代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用的代码如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code><span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">package</span><span class="token operator">*</span><span class="token operator">*</span> fasthttp</span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">import</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;context&quot;</span>&quot;encoding<span class="token operator">/</span>json<span class="token string">&quot;&quot;</span>math<span class="token operator">/</span>rand<span class="token string">&quot;&quot;</span>strconv<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>valyala<span class="token operator">/</span>fasthttp&quot;</span>
<span class="line">    transport <span class="token string">&quot;github.com/tx7do/kratos-transport/fasthttp&quot;</span></span>
<span class="line">    </span>
<span class="line">    api <span class="token string">&quot;github.com/tx7do/kratos-transport/_example/api/protobuf&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span>main<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv <span class="token operator">:=</span> transport<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token function">WithAddress</span><span class="token punctuation">(</span><span class="token string">&quot;:8800&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/login/_param&quot;</span>__<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">(</span>c _fasthttp<span class="token punctuation">.</span>RequestCtx<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hygrothermograph&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>c <span class="token operator">*</span>fasthttp<span class="token punctuation">.</span>RequestCtx<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> out api<span class="token punctuation">.</span>Hygrothermograph</span>
<span class="line">        out<span class="token punctuation">.</span>Humidity <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">int64</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">        out<span class="token punctuation">.</span>Temperature <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">int64</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token boolean">_</span> <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Response<span class="token punctuation">.</span><span class="token function">BodyWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>out<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">defer</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;expected nil got %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">复制代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hertz" tabindex="-1"><a class="header-anchor" href="#hertz"><span>Hertz</span></a></h2><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.cloudwego.io%2Fzh%2Fdocs%2Fhertz%2F" target="_blank" rel="noopener noreferrer">Hertz[həːts]</a> 是一个 Golang 微服务 HTTP 框架，在设计之初参考了其他开源框架 fasthttp、gin、echo 的优势， 并结合字节跳动内部的需求，使其具有高易用性、高性能、高扩展性等特点，目前在字节跳动内部已广泛使用。 如今越来越多的微服务选择使用 Golang，如果对微服务性能有要求，又希望框架能够充分满足内部的可定制化需求，Hertz 会是一个不错的选择。</p><p>封装的代码如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code><span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">package</span><span class="token operator">*</span><span class="token operator">*</span> hertz</span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">import</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token string">&quot;context&quot;</span>&quot;crypto<span class="token operator">/</span>tls<span class="token string">&quot;&quot;</span>net<span class="token operator">/</span>url<span class="token string">&quot;&quot;</span>time&quot;</span>
<span class="line"></span>
<span class="line">        hertz <span class="token string">&quot;github.com/cloudwego/hertz/pkg/app/server&quot;</span>&quot;github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>log<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>middleware<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>kratos<span class="token operator">/</span>kratos<span class="token operator">/</span>v2<span class="token operator">/</span>transport&quot;</span>
<span class="line">        kHttp <span class="token string">&quot;github.com/go-kratos/kratos/v2/transport/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token boolean">_</span> transport<span class="token punctuation">.</span>Server     <span class="token operator">=</span> <span class="token punctuation">(</span>_Server<span class="token punctuation">)</span><span class="token punctuation">(</span>__nil__<span class="token punctuation">)</span></span>
<span class="line">__        <span class="token boolean">_</span> transport<span class="token punctuation">.</span>Endpointer <span class="token operator">=</span> <span class="token punctuation">(</span>_Server<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">type</span><span class="token operator">*</span><span class="token operator">*</span> Server <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">struct</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        _hertz<span class="token punctuation">.</span>Hertz</span>
<span class="line"></span>
<span class="line">__        tlsConf  _tls<span class="token punctuation">.</span>Config</span>
<span class="line">        endpoint _url<span class="token punctuation">.</span>URL</span>
<span class="line">        timeout  time<span class="token punctuation">.</span>Duration</span>
<span class="line">__        addr     <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span></span>
<span class="line"></span>
<span class="line">__        err <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span></span>
<span class="line"></span>
<span class="line">        filters <span class="token punctuation">[</span><span class="token punctuation">]</span>kHttp<span class="token punctuation">.</span>FilterFunc</span>
<span class="line">        ms      <span class="token punctuation">[</span><span class="token punctuation">]</span>middleware<span class="token punctuation">.</span>Middleware</span>
<span class="line">        dec     kHttp<span class="token punctuation">.</span>DecodeRequestFunc</span>
<span class="line">        enc     kHttp<span class="token punctuation">.</span>EncodeResponseFunc</span>
<span class="line">        ene     kHttp<span class="token punctuation">.</span>EncodeErrorFunc</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span>NewServer<span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">(</span>opts <span class="token operator">...</span>ServerOption<span class="token punctuation">)</span> _Server <span class="token punctuation">{</span></span>
<span class="line">        srv <span class="token operator">:=</span> <span class="token operator">&amp;</span>Server<span class="token punctuation">{</span></span>
<span class="line">                timeout<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span></span>
<span class="line">                dec<span class="token punctuation">:</span>     kHttp<span class="token punctuation">.</span>DefaultRequestDecoder<span class="token punctuation">,</span></span>
<span class="line">                enc<span class="token punctuation">:</span>     kHttp<span class="token punctuation">.</span>DefaultResponseEncoder<span class="token punctuation">,</span></span>
<span class="line">                ene<span class="token punctuation">:</span>     kHttp<span class="token punctuation">.</span>DefaultErrorEncoder<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        srv<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>opts<span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> srv</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">init</span><span class="token punctuation">(</span>opts <span class="token operator">...</span>ServerOption<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">for</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token boolean">_</span><span class="token punctuation">,</span> o <span class="token operator">:=</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">range</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> opts <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">o</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>Hertz <span class="token operator">=</span> hertz<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span>hertz<span class="token punctuation">.</span><span class="token function">WithHostPorts</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span><span class="token punctuation">,</span> hertz<span class="token punctuation">.</span><span class="token function">WithTLS</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>tlsConf<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        s<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Endpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>_url<span class="token punctuation">.</span>URL<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> s<span class="token punctuation">.</span>endpoint<span class="token punctuation">,</span> __nil__</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token punctuation">(</span>s _Server<span class="token punctuation">)</span> <span class="token function">Start</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">&quot;[hertz] server listening on: %s&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>addr<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> s<span class="token punctuation">.</span>Hertz<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">Stop</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">error</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;[hertz] server stopping&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span> s<span class="token punctuation">.</span>Hertz<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">复制代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用的代码如下：</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code><span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">package</span><span class="token operator">*</span><span class="token operator">*</span> hertz</span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">import</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;context&quot;</span>&quot;math<span class="token operator">/</span>rand<span class="token string">&quot;&quot;</span>strconv<span class="token string">&quot;&quot;</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>cloudwego<span class="token operator">/</span>hertz<span class="token operator">/</span>pkg<span class="token operator">/</span>app&quot;</span>
<span class="line">    transport <span class="token string">&quot;github.com/tx7do/kratos-transport/hertz&quot;</span></span>
<span class="line">    </span>
<span class="line">    api <span class="token string">&quot;github.com/tx7do/kratos-transport/_example/api/protobuf&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span>TestServer<span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>t _testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    srv <span class="token operator">:=</span> transport<span class="token punctuation">.</span><span class="token function">NewServer</span><span class="token punctuation">(</span></span>
<span class="line">__        <span class="token function">WithAddress</span><span class="token punctuation">(</span>__<span class="token string">&quot;127.0.0.1:8800&quot;</span>__<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">__    srv<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span>__<span class="token string">&quot;/login/_param&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> c _app<span class="token punctuation">.</span>RequestContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">__        <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span> <span class="token function">__len__</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Params<span class="token punctuation">.</span><span class="token function">ByName</span><span class="token punctuation">(</span>__<span class="token string">&quot;param&quot;</span>__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> __1__ <span class="token punctuation">{</span></span>
<span class="line">__            c<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>__404__<span class="token punctuation">)</span></span>
<span class="line">__            <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">return</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">__        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>__200__<span class="token punctuation">,</span> __<span class="token string">&quot;Hello World!&quot;</span>__<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">__    srv<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span>__<span class="token string">&quot;/hygrothermograph&quot;</span>__<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token boolean">_</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> c _app<span class="token punctuation">.</span>RequestContext<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">var</span><span class="token operator">*</span><span class="token operator">*</span> out api<span class="token punctuation">.</span>Hygrothermograph</span>
<span class="line">        out<span class="token punctuation">.</span>Humidity <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">int64</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">        out<span class="token punctuation">.</span>Temperature <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span><span class="token builtin">int64</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>out<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">defer</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">func</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">if</span><span class="token operator">*</span><span class="token operator">*</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Stop</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;expected nil got %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">复制代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fgin-gonic%2Fgin" target="_blank" rel="noopener noreferrer">GIN - Github</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgin-gonic.com%2F" target="_blank" rel="noopener noreferrer">Gin - Website</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fvalyala%2Ffasthttp" target="_blank" rel="noopener noreferrer">FastHTTP Github</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fcloud.tencent.com%2Fdeveloper%2Fnews%2F462918" target="_blank" rel="noopener noreferrer">fasthttp：高性能背后的惨痛代价</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F367927669" target="_blank" rel="noopener noreferrer">fasthttp 性能真的比标准库 http 包好很多吗？一文告诉你真相！</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcloudwego%2Fhertz" target="_blank" rel="noopener noreferrer">Hertz - Github</a></li><li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.cloudwego.io%2Fzh%2Fdocs%2Fhertz%2F" target="_blank" rel="noopener noreferrer">Hertz - Docs</a></li></ul><p><a href="https://juejin.cn/post/7172470244009590815" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7172470244009590815</a></p>`,27)]))}const i=s(o,[["render",e]]),r=JSON.parse('{"path":"/Golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/Kratos/%E9%9B%86%E6%88%90%E4%B8%89%E6%96%B9web%E6%A1%86%E6%9E%B6.html","title":"集成三方 web 框架","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Gin","slug":"gin","link":"#gin","children":[]},{"level":2,"title":"FastHttp","slug":"fasthttp","link":"#fasthttp","children":[]},{"level":2,"title":"Hertz","slug":"hertz","link":"#hertz","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{},"filePathRelative":"Golang/微服务框架/Kratos/集成三方web框架.md"}');export{i as comp,r as data};
