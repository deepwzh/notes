import{_ as e,c as n,a as s,o as l}from"./app-BNx8wf2R.js";const i={};function c(t,a){return l(),n("div",null,a[0]||(a[0]=[s(`<h1 id="canan" tabindex="-1"><a class="header-anchor" href="#canan"><span>Canan</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><h2 id="生成器" tabindex="-1"><a class="header-anchor" href="#生成器"><span>生成器</span></a></h2><h3 id="cmaketoolchain" tabindex="-1"><a class="header-anchor" href="#cmaketoolchain"><span>CMakeToolchain</span></a></h3><p>通过工具链文件自动传递 Conan 的编译配置（如编译器路径、标准库版本等），然后可以将其传递进 cmake 中</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token punctuation">[</span>generators<span class="token punctuation">]</span></span>
<span class="line">CMakeDeps</span>
<span class="line">CMakeToolchain</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">conan <span class="token function">install</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">--build</span><span class="token operator">=</span>missing</span>
<span class="line">cmake <span class="token builtin class-name">.</span> <span class="token parameter variable">-DCMAKE_TOOLCHAIN_FILE</span><span class="token operator">=</span>conan_toolchain.cmake</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cmakedeps" tabindex="-1"><a class="header-anchor" href="#cmakedeps"><span>CMakeDeps</span></a></h3><p>CMakeDeps 会生成更现代的 XXXConfig.cmake 文件，支持 CMake 的 find_package 和 target_link_libraries</p>`,9)]))}const r=e(i,[["render",c]]),o=JSON.parse('{"path":"/Cpp/%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Canan.html","title":"Canan","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"生成器","slug":"生成器","link":"#生成器","children":[{"level":3,"title":"CMakeToolchain","slug":"cmaketoolchain","link":"#cmaketoolchain","children":[]},{"level":3,"title":"CMakeDeps","slug":"cmakedeps","link":"#cmakedeps","children":[]}]}],"git":{},"filePathRelative":"Cpp/包管理工具/Canan.md"}');export{r as comp,o as data};
