import{_ as a,c as e,a as n,o as i}from"./app-CDWhkXlS.js";const l="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/static/W2Gfb3tIsoyeCdxNcqucDBunn5f.png",r={};function d(p,s){return i(),e("div",null,s[0]||(s[0]=[n('<h1 id="linux-免密登录" tabindex="-1"><a class="header-anchor" href="#linux-免密登录"><span>Linux 免密登录</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>其他机器需要通过 ssh 连接某台 Linux，除了可以通过密码进行连接外；还可以使用公钥或者私钥的方式进行</p><p>相对于密码的方式，后者安全性更好一些，且不需要重复输入密码，即所谓免密登录</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><ul><li>RSA 加密算法 <a href="https://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html" target="_blank" rel="noopener noreferrer">RSA 算法原理(一) - 阮一峰的网络日志</a></li></ul><h2 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h2><h3 id="前置步骤" tabindex="-1"><a class="header-anchor" href="#前置步骤"><span>前置步骤</span></a></h3><h4 id="开启-ssh-服务" tabindex="-1"><a class="header-anchor" href="#开启-ssh-服务"><span>开启 ssh 服务</span></a></h4><h5 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>linux</span></a></h5><ul><li>确保被连接机器上的 ssh 处于开启状态 <ul><li>终端输入 sudo service ssh status <img src="'+l+`" alt=""></li><li>看到 active(running) 说明服务正常</li></ul></li></ul><h4 id="生成密钥对" tabindex="-1"><a class="header-anchor" href="#生成密钥对"><span>生成密钥对</span></a></h4><h5 id="linux-1" tabindex="-1"><a class="header-anchor" href="#linux-1"><span>Linux</span></a></h5><p>要生成 rsa 密钥对，只需要打开要被连接的 Linux 终端</p><p>键入</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">ssh<span class="token operator">-</span>keygen</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可，期间出现的几个选项都可以按回车保持默认值</p><p>然后</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">ls <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以看到生成的若干文件</p><p>id_rsa: 生成的私钥文件</p><p>id_rsa.pub: 生成的公钥文件</p><p>known_hosts: 已知主机的指纹文件，用于防范中间人攻击 <a href="https://linuxhandbook.com/known-hosts-file/" target="_blank" rel="noopener noreferrer">What is known_hosts File in Linux [Everything to Know]</a></p><p>authorized_keys: 这个文件需要用到时手动创建，文件用于控制，哪些公钥被允许连接到这台机器上</p><p>复制 id_rsa.pub 里面的内容，即是我们需要的公钥，下一步需要用到</p><h5 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h5><p>与 Linux 步骤类似，不同的是，生成的文件存放在了 <code>%HOMEPATH%/.ssh</code> 而已</p><h3 id="使用私钥登录" tabindex="-1"><a class="header-anchor" href="#使用私钥登录"><span>使用私钥登录</span></a></h3><h4 id="在目标机器上" tabindex="-1"><a class="header-anchor" href="#在目标机器上"><span>在目标机器上</span></a></h4><ol><li>执行密钥对生成</li><li>将公钥复制进 authorized_keys</li></ol><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line">cd ~/.ssh</span>
<span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span>
<span class="line"># 或将id_rsa.pub的内容手动拷贝到authorized_keys末尾处</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在发起连接的机器上" tabindex="-1"><a class="header-anchor" href="#在发起连接的机器上"><span>在发起连接的机器上</span></a></h4><ol><li>拿到目标机器的私钥（~/.ssh/id_rsa）</li><li>测试 ssh -i 私钥路径 用户名 @ 主机名，如</li></ol><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line">ssh -i id_rsa root@<span class="token number">192.168</span>.<span class="token number">1.11</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="使用公钥登录" tabindex="-1"><a class="header-anchor" href="#使用公钥登录"><span>使用公钥登录</span></a></h3><h4 id="在发起连接的机器上-1" tabindex="-1"><a class="header-anchor" href="#在发起连接的机器上-1"><span>在发起连接的机器上</span></a></h4><p>复制.ssh 目录的 id_rsa.pub 公钥文件的内容</p><h4 id="在目标机器上-1" tabindex="-1"><a class="header-anchor" href="#在目标机器上-1"><span>在目标机器上</span></a></h4><p>authorized_keys 文件用于控制，哪些公钥被允许连接到这台机器上</p><p>假设上一步复制的公钥是 <code>ssh-rsa fsdfsdfsdfsdf root@192.168.1.11</code></p><p>如果要允许一个公钥连接到这台机器，可以使用以下命令</p><p>对于 Linux</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">cd <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>ssh</span>
<span class="line">echo <span class="token string">&quot;ssh-rsa fsdfsdfsdfsdf root@192.168.1.11&quot;</span> <span class="token operator">&gt;&gt;</span> authorized_keys</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 Windows</p><p>进入目录 %HOMEPATH%/.ssh,打开或者新建文件 authorized_keys，在文件末尾加入公钥字符串</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">ssh<span class="token operator">-</span>rsa fsdfsdfsdfsdf root<span class="token variable">@192.168.1.11</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h4><p>经过如上操作，可以尝试进行连接测试了</p><p>假设被连接机器的用户名是 root , 机器 IP 是 192.168.1.11</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">ssh root<span class="token variable">@192.168.11</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不出报错就意味着连接成功了</p><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展"><span>扩展</span></a></h2><p>ssh 免密登录实现后，可以更方便的进行远程连接开发，详见文档<a href="https://flowgame.feishu.cn/wiki/wikcnr0NHzLkjLZa3194YgRAFCh" target="_blank" rel="noopener noreferrer">远程开发环境搭建</a></p>`,53)]))}const h=a(r,[["render",d]]),o=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Linux%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95.html","title":"Linux 免密登录","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"步骤","slug":"步骤","link":"#步骤","children":[{"level":3,"title":"前置步骤","slug":"前置步骤","link":"#前置步骤","children":[]},{"level":3,"title":"使用私钥登录","slug":"使用私钥登录","link":"#使用私钥登录","children":[]},{"level":3,"title":"使用公钥登录","slug":"使用公钥登录","link":"#使用公钥登录","children":[]}]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}],"git":{},"filePathRelative":"操作系统/Linux/Linux免密登录.md"}');export{h as comp,o as data};
