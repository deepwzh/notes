import{_ as t,c as i,a as l,o}from"./app-IvRFt9fL.js";const n={};function r(a,e){return o(),i("div",null,e[0]||(e[0]=[l('<h1 id="clone" tabindex="-1"><a class="header-anchor" href="#clone"><span>Clone</span></a></h1><h3 id="如何将-git-浅表克隆转换为完整克隆" tabindex="-1"><a class="header-anchor" href="#如何将-git-浅表克隆转换为完整克隆"><span>如何将 Git 浅表克隆转换为完整克隆？</span></a></h3><p><a href="https://m.imooc.com/wenda/detail/606372" target="_blank" rel="noopener noreferrer">如何将 Git 浅表克隆转换为完整克隆?</a></p><p>下面的命令（git 版本 1.8.3）将浅层克隆转换为常规克隆 git fetch --unshallow 然后，可以访问原始站点上的所有分支（感谢 @Peter 的评论）git config remote.origin.fetch &quot;+refs/heads/<em>:refs/remotes/origin/</em>&quot;git fetch origin</p><p>0</p><p>您可以运行 git fetch --depth=1000000（假设存储库中的提交少于一百万次）。</p><p>0</p><h3 id="拉取-git-仓库代码更迅速的方式" tabindex="-1"><a class="header-anchor" href="#拉取-git-仓库代码更迅速的方式"><span>**. **<strong>拉取 Git 仓库代码更迅速的方式</strong></span></a></h3><ul><li><p>方式 1：<code>git clone --depth 1 &lt;url&gt;</code></p><ul><li>只会下载的内容质包含最近一次 <code>commit</code> 信息，代码完整</li><li><strong>缺点:</strong> ① 切换不到历史 commit ② 切换不到别的分支</li></ul></li><li><p>⭐️ 方式 2：<code>git clone --filter=blob:none &lt;url&gt;</code></p><ul><li>只下载 commits 历史以及 HEAD 的文件</li><li>每次 checkout 都会触发一次从 remote 下载源文件</li></ul></li></ul><p>比较推荐方式 2：大家在拉取大型仓库的时候可以实践一下</p><p>虽然方式 1 更快，但后续要正常操作要麻烦一点，方式 2 没有额外操作步骤</p><p>作者：粥里有勺糖</p><p>链接：<a href="https://juejin.cn/post/7188322897310515257" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7188322897310515257</a></p><p>来源：稀土掘金</p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>',15)]))}const c=t(n,[["render",r]]),s=JSON.parse('{"path":"/%E6%9D%82%E9%A1%B9/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Git/Clone%20.html","title":"Clone","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"如何将 Git 浅表克隆转换为完整克隆？","slug":"如何将-git-浅表克隆转换为完整克隆","link":"#如何将-git-浅表克隆转换为完整克隆","children":[]},{"level":3,"title":"**. **拉取 Git 仓库代码更迅速的方式","slug":"拉取-git-仓库代码更迅速的方式","link":"#拉取-git-仓库代码更迅速的方式","children":[]}],"git":{},"filePathRelative":"杂项/版本管理工具/Git/Clone .md"}');export{c as comp,s as data};
