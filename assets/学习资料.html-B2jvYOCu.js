import{_ as r,c as a,a as o,o as n}from"./app-EGhza7Qr.js";const t={};function l(h,e){return n(),a("div",null,e[0]||(e[0]=[o('<h1 id="学习资料" tabindex="-1"><a class="header-anchor" href="#学习资料"><span>学习资料</span></a></h1><p>学习资料</p><h1 id="好的网站博客" tabindex="-1"><a class="header-anchor" href="#好的网站博客"><span>好的网站博客</span></a></h1><p><a href="https://studygolang.com/articles" target="_blank" rel="noopener noreferrer">https://studygolang.com/articles</a></p><h1 id="书籍资料" tabindex="-1"><a class="header-anchor" href="#书籍资料"><span>书籍资料</span></a></h1><p><a href="https://books.studygolang.com/" target="_blank" rel="noopener noreferrer">首页 - Go 语言中文网 - Golang 中文社区 (</a><a href="https://books.studygolang.com/" target="_blank" rel="noopener noreferrer">studygolang.com</a><a href="https://books.studygolang.com/" target="_blank" rel="noopener noreferrer">)</a></p><p><a href="https://github.com/wonderfo/wonderfogo/wiki" target="_blank" rel="noopener noreferrer">https://github.com/wonderfo/wonderfogo/wiki</a></p><p><a href="https://www.topgoer.com/" target="_blank" rel="noopener noreferrer">前景 · Go 语言中文文档 (</a><a href="https://www.topgoer.com/" target="_blank" rel="noopener noreferrer">topgoer.com</a><a href="https://www.topgoer.com/" target="_blank" rel="noopener noreferrer">)</a></p><p><a href="https://draveness.me/" target="_blank" rel="noopener noreferrer">golang 设计与实现</a></p><p><a href="https://golang.design/under-the-hood/zh-cn/" target="_blank" rel="noopener noreferrer">Go 语言原本 (golang.design)</a></p><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><p>全面分析 Go 语言中的类型和类型指针的抉择 <a href="https://colobu.com/2017/01/05/-T-or-T-it-s-a-question/" target="_blank" rel="noopener noreferrer">[]T 还是 []*T, 这是一个问题 (</a><a href="https://colobu.com/2017/01/05/-T-or-T-it-s-a-question/" target="_blank" rel="noopener noreferrer">colobu.com</a><a href="https://colobu.com/2017/01/05/-T-or-T-it-s-a-question/" target="_blank" rel="noopener noreferrer">)</a></p><h2 id="库" tabindex="-1"><a class="header-anchor" href="#库"><span>库</span></a></h2><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json"><span>json</span></a></h3><p>[转]Golang 中使用 JSON 的小技巧 (colobu.com)</p><p><a href="https://github.com/tidwall/sjson" target="_blank" rel="noopener noreferrer">tidwall/sjson: Set JSON values very quickly in Go (</a><a href="https://github.com/tidwall/sjson" target="_blank" rel="noopener noreferrer">github.com</a><a href="https://github.com/tidwall/sjson" target="_blank" rel="noopener noreferrer">)</a></p><h1 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h1><h2 id="并发变成" tabindex="-1"><a class="header-anchor" href="#并发变成"><span>并发变成</span></a></h2><p><a href="https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-sync-primitives/" target="_blank" rel="noopener noreferrer">Go 语言并发编程、同步原语与锁 | Go 语言设计与实现 (draveness.me)</a></p><p><a href="https://cloud.tencent.com/developer/article/1810536" target="_blank" rel="noopener noreferrer">Golang 并发赋值的安全性探讨 - 云 + 社区 - 腾讯云 (</a><a href="https://cloud.tencent.com/developer/article/1810536" target="_blank" rel="noopener noreferrer">tencent.com</a><a href="https://cloud.tencent.com/developer/article/1810536" target="_blank" rel="noopener noreferrer">)</a></p><p><a href="https://lailin.xyz/post/go-training-week3-goroutine.html" target="_blank" rel="noopener noreferrer">Go 并发编程(一) goroutine - Mohuishou (lailin.xyz)</a></p><h2 id="反射" tabindex="-1"><a class="header-anchor" href="#反射"><span>反射</span></a></h2><p><a href="https://halfrost.com/go_reflection/" target="_blank" rel="noopener noreferrer">Go reflection 三定律与最佳实践 (</a><a href="https://halfrost.com/go_reflection/" target="_blank" rel="noopener noreferrer">halfrost.com</a><a href="https://halfrost.com/go_reflection/" target="_blank" rel="noopener noreferrer">)</a></p><h2 id="分布式任务队列" tabindex="-1"><a class="header-anchor" href="#分布式任务队列"><span>分布式任务队列</span></a></h2><p><a href="https://github.com/RichardKnop/machinery" target="_blank" rel="noopener noreferrer">RichardKnop/machinery: Machinery is an asynchronous task queue/job queue based on distributed message passing. (</a><a href="https://github.com/RichardKnop/machinery" target="_blank" rel="noopener noreferrer">github.com</a><a href="https://github.com/RichardKnop/machinery" target="_blank" rel="noopener noreferrer">)</a></p><h2 id="项目布局" tabindex="-1"><a class="header-anchor" href="#项目布局"><span>项目布局</span></a></h2><p><a href="https://github.com/golang-standards/project-layout/blob/master/README_zh.md" target="_blank" rel="noopener noreferrer">project-layout/README_zh.md at master · golang-standards/project-layout (</a><a href="https://github.com/golang-standards/project-layout/blob/master/README_zh.md" target="_blank" rel="noopener noreferrer">github.com</a><a href="https://github.com/golang-standards/project-layout/blob/master/README_zh.md" target="_blank" rel="noopener noreferrer">)</a></p>',27)]))}const p=r(t,[["render",l]]),c=JSON.parse('{"path":"/Golang/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99.html","title":"学习资料","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[]},{"level":2,"title":"库","slug":"库","link":"#库","children":[{"level":3,"title":"json","slug":"json","link":"#json","children":[]}]},{"level":2,"title":"并发变成","slug":"并发变成","link":"#并发变成","children":[]},{"level":2,"title":"反射","slug":"反射","link":"#反射","children":[]},{"level":2,"title":"分布式任务队列","slug":"分布式任务队列","link":"#分布式任务队列","children":[]},{"level":2,"title":"项目布局","slug":"项目布局","link":"#项目布局","children":[]}],"git":{},"filePathRelative":"Golang/学习资料.md"}');export{p as comp,c as data};
