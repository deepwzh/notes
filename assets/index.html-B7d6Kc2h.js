import{_ as p,c as i,a as o,d as s,b as e,w as l,r as c,o as r,e as t}from"./app-CBMSK_O_.js";const u={};function d(k,n){const a=c("RouteLink");return r(),i("div",null,[n[4]||(n[4]=o(`<h1 id="bash" tabindex="-1"><a class="header-anchor" href="#bash"><span>Bash</span></a></h1><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令"><span>命令</span></a></h2><h3 id="set-命令" tabindex="-1"><a class="header-anchor" href="#set-命令"><span>set 命令</span></a></h3><p><code>set -o pipefail</code> ：在 Bash 中，管道（<code>|</code>）默认仅以<strong>最后一个命令的退出状态</strong>作为整个管道的返回值，开启这个选项后，管道中<strong>任意一个命令失败</strong>都会导致整个管道返回非 0 状态码。</p><p><code>set -e</code> ：任意命令出错都会导致退出</p><h3 id="并行执行" tabindex="-1"><a class="header-anchor" href="#并行执行"><span>并行执行</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">arg</span> <span class="token keyword">in</span> <span class="token string">&quot;aa bb&quot;</span></span>
<span class="line">  ./program <span class="token operator">&amp;</span> <span class="token comment"># 在子进程中执行</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token function">wait</span> <span class="token comment"># 等待所有子进程执行完</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断"><span>条件判断</span></a></h2><h3 id="与" tabindex="-1"><a class="header-anchor" href="#与"><span>[ 与[[</span></a></h3><ul><li><code>[</code> 是 test 命令</li><li><code>[[</code> 是 Bash 的扩展测试命令，提供了更强大的功能</li></ul><h3 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h3><p>在 Bash 中，运算符的优先级如下：</p><ol><li><p><strong>逻辑运算符</strong>：</p><ul><li><code>!</code>（逻辑非）</li><li><code>&amp;&amp;</code>（逻辑与）</li><li><code>||</code>（逻辑或）</li></ul></li><li><p><strong>比较运算符</strong>：</p><ul><li><code>eq</code>, <code>ne</code>, <code>lt</code>, <code>le</code>, <code>gt</code>, <code>ge</code>（数字比较）</li><li><code>=</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>（字符串比较）</li></ul></li></ol><p>可以使用括号指定优先级</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$a</span>&quot;</span> <span class="token parameter variable">-lt</span> <span class="token string">&quot;<span class="token variable">$b</span>&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;<span class="token variable">$b</span>&quot;</span> <span class="token parameter variable">-gt</span> <span class="token number">15</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Both conditions are true: a is less than b and b is greater than 15.&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">&quot;<span class="token variable">$a</span>&quot;</span> <span class="token parameter variable">-lt</span> <span class="token string">&quot;<span class="token variable">$b</span>&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">&quot;<span class="token variable">$b</span>&quot;</span> <span class="token parameter variable">-gt</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Both conditions are true.&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串匹配" tabindex="-1"><a class="header-anchor" href="#字符串匹配"><span>字符串匹配</span></a></h3><p><code>==</code> 用于相等关系的判断</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$string</span>&quot;</span> <span class="token operator">==</span> _substring_ <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Contains substring&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>=~</code> 则用于正则关系匹配</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$string</span>&quot;</span> <span class="token operator">=~</span> pattern <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Matches regex&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 pattern 是用正则表达式的语法的模式串</p><h3 id="比较" tabindex="-1"><a class="header-anchor" href="#比较"><span>比较</span></a></h3><p>相等</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;<span class="token variable">$str2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Strings are equal&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;<span class="token variable">$str2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Strings are equal&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字典序大小比较</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token operator">&lt;</span> <span class="token string">&quot;<span class="token variable">$str2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$str1</span> comes before <span class="token variable">$str2</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token operator">&gt;</span> <span class="token string">&quot;<span class="token variable">$str2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$str1</span> comes after <span class="token variable">$str2</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不等</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;<span class="token variable">$str2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Strings are not equal&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>空非空字符串检查</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;String is empty&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$str1</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;String is not empty&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数字比较</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$num1</span>&quot;</span> <span class="token parameter variable">-eq</span> <span class="token string">&quot;<span class="token variable">$num2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Numbers are equal&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$num1</span>&quot;</span> <span class="token parameter variable">-ne</span> <span class="token string">&quot;<span class="token variable">$num2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Numbers are not equal&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$num1</span>&quot;</span> <span class="token parameter variable">-gt</span> <span class="token string">&quot;<span class="token variable">$num2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$num1</span> is greater than <span class="token variable">$num2</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$num1</span>&quot;</span> <span class="token parameter variable">-lt</span> <span class="token string">&quot;<span class="token variable">$num2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$num1</span> is less than <span class="token variable">$num2</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$num1</span>&quot;</span> <span class="token parameter variable">-le</span> <span class="token string">&quot;<span class="token variable">$num2</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$num1</span> is less than or equal to <span class="token variable">$num2</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li>最好都加引号，防止解析出错</li><li>使用[时，必须在括号和条件之间添加空格。</li><li>[[支持逻辑运算符&amp;&amp;和 ||, [则不支持</li><li>[[ 允许使用模式匹配（如 == 和 !=），支持通配符 * 和 ?, [判断相等得用=</li><li>使用 [[ 时，如果变量未定义，返回空字符串不会导致错误。使用 [ 时，如果未定义变量，会导致错误</li></ul><h2 id="子文档" tabindex="-1"><a class="header-anchor" href="#子文档"><span>子文档</span></a></h2>`,35)),s("ul",null,[s("li",null,[e(a,{to:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Shell/Bash/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"},{default:l(()=>n[0]||(n[0]=[t("配置文件")])),_:1})])]),n[5]||(n[5]=s("h2",{id:"子文档-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#子文档-1"},[s("span",null,"子文档")])],-1)),s("ul",null,[s("li",null,[e(a,{to:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Shell/Bash/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"},{default:l(()=>n[1]||(n[1]=[t("配置文件")])),_:1})])]),n[6]||(n[6]=s("h2",{id:"子文档-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#子文档-2"},[s("span",null,"子文档")])],-1)),s("ul",null,[s("li",null,[e(a,{to:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Shell/Bash/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"},{default:l(()=>n[2]||(n[2]=[t("配置文件")])),_:1})])]),n[7]||(n[7]=s("h2",{id:"子文档-3",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#子文档-3"},[s("span",null,"子文档")])],-1)),s("ul",null,[s("li",null,[e(a,{to:"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Shell/Bash/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"},{default:l(()=>n[3]||(n[3]=[t("配置文件")])),_:1})])])])}const b=p(u,[["render",d]]),h=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Shell/Bash/","title":"Bash","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"命令","slug":"命令","link":"#命令","children":[{"level":3,"title":"set 命令","slug":"set-命令","link":"#set-命令","children":[]},{"level":3,"title":"并行执行","slug":"并行执行","link":"#并行执行","children":[]}]},{"level":2,"title":"条件判断","slug":"条件判断","link":"#条件判断","children":[{"level":3,"title":"[ 与[[","slug":"与","link":"#与","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":3,"title":"字符串匹配","slug":"字符串匹配","link":"#字符串匹配","children":[]},{"level":3,"title":"比较","slug":"比较","link":"#比较","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}]},{"level":2,"title":"子文档","slug":"子文档","link":"#子文档","children":[]},{"level":2,"title":"子文档","slug":"子文档-1","link":"#子文档-1","children":[]},{"level":2,"title":"子文档","slug":"子文档-2","link":"#子文档-2","children":[]},{"level":2,"title":"子文档","slug":"子文档-3","link":"#子文档-3","children":[]}],"git":{},"filePathRelative":"操作系统/Linux/Shell/Bash/README.md"}');export{b as comp,h as data};
