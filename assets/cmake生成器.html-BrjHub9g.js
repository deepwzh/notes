import{_ as a,c as s,a as n,o as i}from"./app-CBMSK_O_.js";const l={};function c(o,e){return i(),s("div",null,e[0]||(e[0]=[n(`<h1 id="cmake-生成器" tabindex="-1"><a class="header-anchor" href="#cmake-生成器"><span>cmake 生成器</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>CMake 作为跨平台的自动化构建工具，生成器是其核心功能之一，能将 CMake 代码转化为不同平台的构建文件。</p><p>CMake 生成器的核心作用是将 <code>CMakeLists.txt</code> 文件中定义的项目配置和构建规则，转化为目标平台或构建工具可识别的构建文件，如 Makefile、Visual Studio 解决方案文件、Xcode 项目文件等。不同的生成器适用于不同的平台和开发环境，用户可根据项目需求灵活选择。</p><h2 id="常见-cmake-生成器介绍" tabindex="-1"><a class="header-anchor" href="#常见-cmake-生成器介绍"><span>常见 CMake 生成器介绍</span></a></h2><h3 id="unix-makefiles" tabindex="-1"><a class="header-anchor" href="#unix-makefiles"><span>Unix Makefiles</span></a></h3><p><code>Unix Makefiles</code> 是最常用的生成器之一，适用于类 Unix 系统（如 Linux、macOS）。它会生成传统的 Makefile 文件，用户可以通过 <code>make</code> 命令进行构建。这种生成器适用于命令行开发环境，对于习惯使用 <code>make</code> 工具的开发者来说，操作流程熟悉且便捷。例如，在一个基于 Linux 的 C++ 项目中，使用该生成器生成 Makefile 后，只需执行 <code>make</code> 命令，即可按照定义好的规则编译源代码、链接库文件，最终生成可执行程序。</p><h3 id="ninja" tabindex="-1"><a class="header-anchor" href="#ninja"><span>Ninja</span></a></h3><p><code>Ninja</code> 是一款专注于速度的构建系统，<code>Ninja</code> 生成器能够快速生成高效的构建文件。与传统的 <code>make</code> 相比，<code>Ninja</code> 采用了更简洁的语法和优化的构建算法，在大规模项目构建时能够显著缩短编译时间。在现代软件开发中，尤其是涉及大量源代码和复杂依赖关系的项目，<code>Ninja</code> 生成器受到越来越多开发者的青睐。例如，在某些开源项目的构建过程中，使用 <code>Ninja</code> 生成器可以将原本需要数小时的编译时间缩短至几十分钟。</p><h3 id="visual-studio-生成器系列" tabindex="-1"><a class="header-anchor" href="#visual-studio-生成器系列"><span>Visual Studio 生成器系列</span></a></h3><p>Visual Studio 是 Windows 平台上常用的集成开发环境（IDE），CMake 提供了多个针对不同版本 Visual Studio 的生成器，如 <code>Visual Studio 16 2019</code>、<code>Visual Studio 17 2022</code> 等。这些生成器会创建 <code>.sln</code> 解决方案文件和 <code>.vcxproj</code> 项目文件，用户可以在 Visual Studio 中直接打开项目进行开发、调试和构建。通过这种方式，开发者能够充分利用 Visual Studio 强大的可视化调试、代码智能提示等功能，极大提升 Windows 平台下的开发效率。</p><h3 id="xcode" tabindex="-1"><a class="header-anchor" href="#xcode"><span>Xcode</span></a></h3><p><code>Xcode</code> 生成器用于生成适用于 macOS 和 iOS 开发的 Xcode 项目文件。对于 Mac 平台上的 Objective-C 或 Swift 项目，使用该生成器能够方便地将项目集成到 Xcode 开发环境中，借助 Xcode 丰富的开发工具和模拟器，进行应用的开发、测试和发布。例如，在开发一款 iOS 应用时，使用 <code>Xcode</code> 生成器创建项目文件后，即可在 Xcode 中进行界面设计、代码编写和功能调试。</p><h3 id="mingw-makefiles" tabindex="-1"><a class="header-anchor" href="#mingw-makefiles"><span>MinGW Makefiles</span></a></h3><p><code>MinGW</code>（Minimalist GNU for Windows）是一套用于在 Windows 系统上编译和运行 GNU 工具的环境，<code>MinGW Makefiles</code> 生成器会生成适用于 MinGW 环境的 Makefile 文件。通过这种方式，开发者可以在 Windows 系统上使用类 Unix 的开发工具和构建流程，方便地将开源项目移植到 Windows 平台，同时保持与 Linux、macOS 等系统相似的开发体验。</p><h2 id="相关参数" tabindex="-1"><a class="header-anchor" href="#相关参数"><span>相关参数</span></a></h2><p><code>-G</code> 选项是 CMake 命令行中用于指定生成器的关键参数，其基本语法为 <code>cmake -G &quot;Generator Name&quot; [source_path]</code>。其中，<code>Generator Name</code> 是目标生成器的名称，<code>source_path</code> 是包含 <code>CMakeLists.txt</code> 文件的项目源目录路径（如果省略，则默认为当前目录）。</p><h3 id="获取可用生成器列表" tabindex="-1"><a class="header-anchor" href="#获取可用生成器列表"><span>获取可用生成器列表</span></a></h3><p>在使用 <code>-G</code> 选项前，用户可以通过 <code>cmake -G</code> 命令查看当前系统支持的所有生成器列表。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># cmake -G</span></span>
<span class="line">CMake Error: No generator specified <span class="token keyword">for</span> <span class="token parameter variable">-G</span></span>
<span class="line"></span>
<span class="line">Generators</span>
<span class="line">  Green Hills MULTI            <span class="token operator">=</span> Generates Green Hills MULTI files</span>
<span class="line">                                 <span class="token punctuation">(</span>experimental, work-in-progress<span class="token punctuation">)</span>.</span>
<span class="line">* Unix Makefiles               <span class="token operator">=</span> Generates standard UNIX makefiles.</span>
<span class="line">  Ninja                        <span class="token operator">=</span> Generates build.ninja files.</span>
<span class="line">  Ninja Multi-Config           <span class="token operator">=</span> Generates build-<span class="token operator">&lt;</span>Config<span class="token operator">&gt;</span>.ninja files.</span>
<span class="line">  Watcom WMake                 <span class="token operator">=</span> Generates Watcom WMake makefiles.</span>
<span class="line">  CodeBlocks - Ninja           <span class="token operator">=</span> Generates CodeBlocks project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  CodeBlocks - Unix Makefiles  <span class="token operator">=</span> Generates CodeBlocks project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  CodeLite - Ninja             <span class="token operator">=</span> Generates CodeLite project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  CodeLite - Unix Makefiles    <span class="token operator">=</span> Generates CodeLite project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Eclipse CDT4 - Ninja         <span class="token operator">=</span> Generates Eclipse CDT <span class="token number">4.0</span> project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Eclipse CDT4 - Unix <span class="token assign-left variable">Makefiles</span><span class="token operator">=</span> Generates Eclipse CDT <span class="token number">4.0</span> project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Kate - Ninja                 <span class="token operator">=</span> Generates Kate project files <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Kate - Ninja Multi-Config    <span class="token operator">=</span> Generates Kate project files <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Kate - Unix Makefiles        <span class="token operator">=</span> Generates Kate project files <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Sublime Text <span class="token number">2</span> - Ninja       <span class="token operator">=</span> Generates Sublime Text <span class="token number">2</span> project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line">  Sublime Text <span class="token number">2</span> - Unix Makefiles</span>
<span class="line">                               <span class="token operator">=</span> Generates Sublime Text <span class="token number">2</span> project files</span>
<span class="line">                                 <span class="token punctuation">(</span>deprecated<span class="token punctuation">)</span>.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在不同的操作系统下显示的列表可能不同，比 windows 下会包含 visual studio</p><h3 id="指定生成器" tabindex="-1"><a class="header-anchor" href="#指定生成器"><span>指定生成器</span></a></h3><p>假设我们有一个 C++ 项目，项目根目录下包含 <code>CMakeLists.txt</code> 文件。若要使用 <code>Unix Makefiles</code> 生成器，在命令行中进入项目根目录，执行 <code>cmake -G &quot;Unix Makefiles&quot; .</code>，其中 <code>.</code> 表示当前目录。此时，CMake 会在当前目录下生成 Makefile 文件，后续通过 <code>make</code> 命令即可进行构建。</p><p>如果要使用 <code>Visual Studio 17 2022</code> 生成器创建 Visual Studio 2022 项目文件，在命令行中执行 <code>cmake -G &quot;Visual Studio 17 2022&quot; C:\\path\\to\\project</code>（将 <code>C:\\path\\to\\project</code> 替换为实际的项目路径），CMake 会在指定路径下生成 <code>.sln</code> 和 <code>.vcxproj</code> 文件，供 Visual Studio 2022 打开和使用。</p>`,24)]))}const t=a(l,[["render",c]]),d=JSON.parse('{"path":"/Cpp/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/Cmake/cmake%E7%94%9F%E6%88%90%E5%99%A8.html","title":"cmake 生成器","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"常见 CMake 生成器介绍","slug":"常见-cmake-生成器介绍","link":"#常见-cmake-生成器介绍","children":[{"level":3,"title":"Unix Makefiles","slug":"unix-makefiles","link":"#unix-makefiles","children":[]},{"level":3,"title":"Ninja","slug":"ninja","link":"#ninja","children":[]},{"level":3,"title":"Visual Studio 生成器系列","slug":"visual-studio-生成器系列","link":"#visual-studio-生成器系列","children":[]},{"level":3,"title":"Xcode","slug":"xcode","link":"#xcode","children":[]},{"level":3,"title":"MinGW Makefiles","slug":"mingw-makefiles","link":"#mingw-makefiles","children":[]}]},{"level":2,"title":"相关参数","slug":"相关参数","link":"#相关参数","children":[{"level":3,"title":"获取可用生成器列表","slug":"获取可用生成器列表","link":"#获取可用生成器列表","children":[]},{"level":3,"title":"指定生成器","slug":"指定生成器","link":"#指定生成器","children":[]}]}],"git":{},"filePathRelative":"Cpp/构建工具/Cmake/cmake生成器.md"}');export{t as comp,d as data};
