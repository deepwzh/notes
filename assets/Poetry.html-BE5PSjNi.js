import{_ as s,c as n,a,o as i}from"./app-BNx8wf2R.js";const l={};function t(r,e){return i(),n("div",null,e[0]||(e[0]=[a(`<h1 id="poetry" tabindex="-1"><a class="header-anchor" href="#poetry"><span>Poetry</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">poetry completions <span class="token function">bash</span> <span class="token operator">&gt;&gt;</span> ~/.bash_completion</span>
<span class="line"><span class="token builtin class-name">source</span> ~/.bashrc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>poetry env list</p><h2 id="导出-requirements-txt" tabindex="-1"><a class="header-anchor" href="#导出-requirements-txt"><span>导出 requirements.txt</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">poetry <span class="token builtin class-name">export</span> <span class="token parameter variable">-f</span> requirements.txt <span class="token parameter variable">--output</span> requirements.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="通过-requirements-安装依赖" tabindex="-1"><a class="header-anchor" href="#通过-requirements-安装依赖"><span>通过 requirements 安装依赖</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">poetry <span class="token function">add</span> <span class="token variable"><span class="token variable">$(</span> <span class="token function">cat</span> requirements.txt <span class="token variable">)</span></span></span>
<span class="line">_<span class="token comment"># or_</span></span>
<span class="line"><span class="token function">cat</span> requirements.txt <span class="token operator">|</span> <span class="token function">xargs</span> poetry <span class="token function">add</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改镜像源" tabindex="-1"><a class="header-anchor" href="#修改镜像源"><span>修改镜像源</span></a></h3><p>poetry self add poetry-plugin-pypi-mirror</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">#豆瓣 https://pypi.doubanio.com/simple/</span>
<span class="line">#网易 https://mirrors.163.com/pypi/simple/</span>
<span class="line">#阿里云 https://mirrors.aliyun.com/pypi/simple/</span>
<span class="line">#清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/</span>
<span class="line"></span>
<span class="line">[[tool.poetry.source]]</span>
<span class="line">name = &quot;aliyun&quot;</span>
<span class="line">url = &quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span>
<span class="line">default = true</span>
<span class="line"></span>
<span class="line">[plugins.pypi_mirror]</span>
<span class="line">url = &quot;https://pypi.tuna.tsinghua.edu.cn/simple/&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://www.cnblogs.com/waketzheng/p/17142322.html" target="_blank" rel="noopener noreferrer">poetry 安装、升级和换源 - waketzheng - 博客园</a></p><p>将虚拟环境创建在当前目录，这样 vscode 可以识别</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">poetry config virtualenvs.in-project <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,15)]))}const c=s(l,[["render",t]]),d=JSON.parse('{"path":"/Python/%E5%8C%85%E4%B8%8E%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86%E5%99%A8/Poetry.html","title":"Poetry","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":2,"title":"导出 requirements.txt","slug":"导出-requirements-txt","link":"#导出-requirements-txt","children":[{"level":3,"title":"通过 requirements 安装依赖","slug":"通过-requirements-安装依赖","link":"#通过-requirements-安装依赖","children":[]},{"level":3,"title":"修改镜像源","slug":"修改镜像源","link":"#修改镜像源","children":[]}]}],"git":{},"filePathRelative":"Python/包与虚拟环境管理器/Poetry.md"}');export{c as comp,d as data};
