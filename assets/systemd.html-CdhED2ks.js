import{_ as e,c as n,a,o as l}from"./app-DwAh3PLh.js";const i="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/static/O3JmbDcZwo8NXRx0cNAcs5XQnho.png",t="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/static/R1zLbx2pqoe13KxL8fbckrJenih.png",c={};function d(r,s){return l(),n("div",null,s[0]||(s[0]=[a('<h1 id="systemd" tabindex="-1"><a class="header-anchor" href="#systemd"><span>systemd</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span><strong>概述</strong></span></a></h2><p>systemd 是 Linux 系统的一组基本构建模块。它提供了一个系统和服务管理器，以 PID 1 运行并启动系统的其余部分。systemd 提供强大的并行化能力，使用套接字和 D-Bus 激活来启动服务，提供按需启动守护进程，使用 Linux 控制组跟踪进程，维护挂载点和自动挂载点，并实现复杂的基于事务依赖的服务控制逻辑。systemd 支持 SysV 和 LSB 初始化脚本，并可替代 sysvinit。其他部分包括一个日志守护进程、用于控制基本系统配置（如主机名、日期、区域设置）的实用程序、维护登录用户列表以及正在运行的容器和虚拟机、系统账户、运行时目录和设置，以及用于管理简单网络配置、网络时间同步、日志转发和名称解析的守护进程。</p><p>他是一个大而全的系统，包含了很多功能，可以如下图所示：</p><p><img src="'+i+`" alt=""></p><p>主要的一些功能有:</p><ul><li>服务管理：systemd 可以启动、停止、重启、查看服务的状态，还可以设置服务的依赖关系。</li><li>日志管理：systemd 通过 <code>journalctl</code> 命令可以查看系统日志，支持按服务、时间、优先级等条件过滤。</li><li>定时任务：systemd 可以替代 cron，通过 <code>systemd-timer</code> 实现定时任务的管理。</li><li>系统初始化：systemd 负责系统的初始化，包括加载内核模块、挂载文件系统、启动用户空间进程等。</li><li>用户会话：systemd 可以管理用户会话，包括用户登录、注销、会话控制等。</li><li>内核管理：包括 cgroups、kdbus、autofs 等</li><li>网络管理：systemd-networkd 可以管理网络配置，systemd-resolved 可以管理 DNS 解析。</li><li>设备管理：systemd 可以管理设备，包括磁盘、网络、USB 等设备。</li><li>cgroup 管理：systemd 可以管理 cgroup，实现资源限制和控制。</li></ul><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span><strong>基本概念</strong></span></a></h2><h3 id="单元-unit" tabindex="-1"><a class="header-anchor" href="#单元-unit"><span><strong>单元（Unit）</strong></span></a></h3><p>systemd 中的所有配置都是以单元（Unit）的形式存在，单元是 systemd 的基本配置单位，用于描述系统中的各种资源。常见的单元类型包括：</p><ul><li>服务单元（Service Unit）：用于描述一个服务，如 Nginx、MySQL 等。</li><li>定时器单元（Timer Unit）：用于描述一个定时任务。</li><li>设备单元（Device Unit）：用于描述一个设备。</li><li>挂载单元（Mount Unit）：用于描述一个文件系统挂载点。</li><li>路径单元（Path Unit）：用于描述一个文件或目录的监控。</li><li>网络单元（Network Unit）：用于描述一个网络配置。</li><li>...</li></ul><p>单元的配置文件通常存放在 <code>/etc/systemd/system/</code> 目录下，以 <code>.service</code>、<code>.timer</code>、<code>.device</code> 等后缀结尾。</p><h3 id="服务单元-service-unit" tabindex="-1"><a class="header-anchor" href="#服务单元-service-unit"><span><strong>服务单元（Service Unit）</strong></span></a></h3><p>服务单元（Service Unit）用于描述一个服务，包括服务的启动、停止、重启、状态等操作。服务单元的配置文件通常以 <code>.service</code> 为后缀，如 <code>nginx.service</code>、<code>mysql.service</code> 等。</p><p>服务单元的配置文件通常包含以下几个部分：</p><ul><li><code>[Unit]</code>：描述单元的基本信息，如单元的描述、依赖关系等。</li><li><code>[Service]</code>：描述服务的具体配置，如服务的启动命令、环境变量、工作目录等。</li><li><code>[Install]</code>：描述单元的安装信息，如单元的启动级别、依赖关系等。</li></ul><p>一个简单的服务单元配置文件示例如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">[Unit]</span>
<span class="line">Description=My Service</span>
<span class="line">After=network.target</span>
<span class="line"></span>
<span class="line">[Service]</span>
<span class="line">Type=simple</span>
<span class="line">ExecStart=/usr/bin/my-service</span>
<span class="line">Restart=always</span>
<span class="line"></span>
<span class="line">[Install]</span>
<span class="line">WantedBy=multi-user.target</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志管理" tabindex="-1"><a class="header-anchor" href="#日志管理"><span><strong>日志管理</strong></span></a></h2><p>systemd 使用 <code>systemd-journald</code> 守护进程来管理系统日志。<code>systemd-journald</code> 守护进程会将日志信息保存在 <code>/run/log/journal</code> 目录下，日志信息以二进制格式存储。我们可以使用 <code>journalctl</code> 命令来查看系统日志，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 查看所有日志</span></span>
<span class="line">journalctl</span>
<span class="line"><span class="token comment"># 查看指定服务的日志</span></span>
<span class="line">journalctl <span class="token parameter variable">-u</span> nginx</span>
<span class="line"><span class="token comment"># 查看指定时间范围的日志</span></span>
<span class="line">journalctl <span class="token parameter variable">--since</span> <span class="token string">&quot;2025-03-15 00:00:00&quot;</span> <span class="token parameter variable">--until</span> <span class="token string">&quot;2025-03-15 23:59:59&quot;</span></span>
<span class="line"><span class="token comment"># 查看指定优先级的日志</span></span>
<span class="line">journalctl <span class="token parameter variable">-p</span> err</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定时任务" tabindex="-1"><a class="header-anchor" href="#定时任务"><span><strong>定时任务</strong></span></a></h2><p>systemd 可以通过定时器单元（Timer Unit）实现定时任务的管理。定时器单元的配置文件通常以 <code>.timer</code> 为后缀，如 <code>my-task.timer</code>。</p><p>一个简单的定时器单元配置文件示例如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">[Unit]</span>
<span class="line">Description=Run My Task</span>
<span class="line"></span>
<span class="line">[Timer]</span>
<span class="line">OnCalendar=*-*-* 00:00:00</span>
<span class="line">Persistent=true</span>
<span class="line"></span>
<span class="line">[Install]</span>
<span class="line">WantedBy=timers.target</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务管理" tabindex="-1"><a class="header-anchor" href="#服务管理"><span><strong>服务管理</strong></span></a></h2><p>systemd 可以管理系统的服务，包括启动、停止、重启、查看状态等。我们可以使用 <code>systemctl</code> 命令管理系统的服务，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 启动服务</span></span>
<span class="line">systemctl start my-service</span>
<span class="line"><span class="token comment"># 停止服务</span></span>
<span class="line">systemctl stop my-service</span>
<span class="line"><span class="token comment"># 重启服务</span></span>
<span class="line">systemctl restart my-service</span>
<span class="line"><span class="token comment"># 查看服务状态</span></span>
<span class="line">systemctl status my-service</span>
<span class="line"><span class="token comment"># 设置服务开机自启动</span></span>
<span class="line">systemctl <span class="token builtin class-name">enable</span> my-service</span>
<span class="line"><span class="token comment"># 取消服务开机自启动</span></span>
<span class="line">systemctl disable my-service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统初始化" tabindex="-1"><a class="header-anchor" href="#系统初始化"><span><strong>系统初始化</strong></span></a></h2><p><img src="`+t+`" alt=""></p><p>systemd 负责系统的初始化，包括加载内核模块、挂载文件系统、启动用户空间进程等。systemd 会在启动时读取 <code>/etc/systemd/system/default.target</code> 文件，根据该文件指定的目标（Target）启动系统。</p><p>常见的系统目标包括：</p><ul><li><code>multi-user.target</code>：多用户目标，用于启动多用户模式。</li><li><code>graphical.target</code>：图形目标，用于启动图形界面。</li><li><code>rescue.target</code>：救援目标，用于修复系统。</li><li><code>emergency.target</code>：紧急目标，用于进入紧急模式。</li></ul><p>我们可以使用 <code>systemctl set-default</code> 命令设置系统的默认目标，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 设置系统默认目标为 multi-user.target</span></span>
<span class="line">systemctl set-default multi-user.target</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用户会话" tabindex="-1"><a class="header-anchor" href="#用户会话"><span><strong>用户会话</strong></span></a></h3><p>systemd 可以管理用户会话，包括用户登录、注销、会话控制等。用户会话的配置文件通常存放在 <code>~/.config/systemd/user/</code> 目录下。</p><p>我们可以使用 <code>systemctl --user</code> 命令管理用户会话，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 启动用户会话中的服务</span></span>
<span class="line">systemctl <span class="token parameter variable">--user</span> start my-service</span>
<span class="line"><span class="token comment"># 停止用户会话中的服务</span></span>
<span class="line">systemctl <span class="token parameter variable">--user</span> stop my-service</span>
<span class="line"><span class="token comment"># 查看用户会话中的服务状态</span></span>
<span class="line">systemctl <span class="token parameter variable">--user</span> status my-service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内核管理" tabindex="-1"><a class="header-anchor" href="#内核管理"><span><strong>内核管理</strong></span></a></h2><p>systemd 包括对 cgroups、kdbus、autofs 等内核功能的管理。cgroups 是 Linux 内核提供的一种资源管理机制，用于限制和控制进程组的资源使用。systemd 可以通过 cgroups 实现对进程的资源限制和控制。</p><h3 id="网络管理" tabindex="-1"><a class="header-anchor" href="#网络管理"><span><strong>网络管理</strong></span></a></h3><p>systemd-networkd 可以管理网络配置，包括网络接口、IP 地址、路由、DNS 等。我们可以使用 <code>systemctl start systemd-networkd</code> 命令启动 systemd-networkd 服务，使用 <code>systemctl enable systemd-networkd</code> 命令设置 systemd-networkd 服务开机自启动。</p><p>systemd-resolved 可以管理 DNS 解析，包括 DNS 缓存、DNS 服务器、DNS 查询等。我们可以使用 <code>systemctl start systemd-resolved</code> 命令启动 systemd-resolved 服务，使用 <code>systemctl enable systemd-resolved</code> 命令设置 systemd-resolved 服务开机自启动。</p><h3 id="设备管理" tabindex="-1"><a class="header-anchor" href="#设备管理"><span><strong>设备管理</strong></span></a></h3><p>systemd 可以管理设备，包括磁盘、网络、USB 等设备。我们可以使用 <code>systemctl start systemd-udevd</code> 命令启动 systemd-udevd 服务，使用 <code>systemctl enable systemd-udevd</code> 命令设置 systemd-udevd 服务开机自启动。</p><h3 id="cgroup-管理" tabindex="-1"><a class="header-anchor" href="#cgroup-管理"><span><strong>cgroup 管理</strong></span></a></h3><p>systemd 可以管理 cgroup，实现资源限制和控制。cgroup 是 Linux 内核提供的一种资源管理机制，用于限制和控制进程组的资源使用。我们可以使用 <code>systemctl set-property</code> 命令设置 cgroup 的资源限制，如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 设置进程的 CPU 限制</span></span>
<span class="line">systemctl set-property my-service <span class="token assign-left variable">CPUQuota</span><span class="token operator">=</span><span class="token number">50</span>%</span>
<span class="line"><span class="token comment"># 设置进程的内存限制</span></span>
<span class="line">systemctl set-property my-service <span class="token assign-left variable">MemoryLimit</span><span class="token operator">=</span>1G</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span><strong>常用命令</strong></span></a></h2><h3 id="systemctl" tabindex="-1"><a class="header-anchor" href="#systemctl"><span><strong>systemctl</strong></span></a></h3><p><code>systemctl</code> 命令用于管理 systemd 服务。常用的选项包括：</p><ul><li><code>start</code>：启动服务。</li><li><code>stop</code>：停止服务。</li><li><code>restart</code>：重启服务。</li><li><code>status</code>：查看服务状态。</li><li><code>enable</code>：设置服务开机自启动。</li><li><code>disable</code>：取消服务开机自启动。</li><li><code>daemon-reload</code>：重新加载 systemd 配置。</li></ul><h3 id="journalctl" tabindex="-1"><a class="header-anchor" href="#journalctl"><span><strong>journalctl</strong></span></a></h3><p><code>journalctl</code> 命令用于查看系统日志。常用的选项包括：</p><ul><li><code>-u</code>：按服务过滤日志。</li><li><code>--since</code>：按时间范围过滤日志。</li><li><code>-p</code>：按优先级过滤日志。</li><li><code>-k</code>：查看内核日志。</li><li><code>-b</code>：查看引导日志。</li><li><code>-f</code>：实时查看日志。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结</strong></span></a></h2><p>systemd 是 Linux 系统的一组基本构建模块，提供了强大的系统和服务管理功能。通过 systemd，我们可以管理系统的服务、日志、定时任务、系统初始化、用户会话、内核、网络、设备、cgroup 等。熟练掌握 systemd 的使用，有助于提高系统管理的效率和可靠性。</p>`,58)]))}const o=e(c,[["render",d]]),m=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/systemd.html","title":"systemd","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[{"level":3,"title":"单元（Unit）","slug":"单元-unit","link":"#单元-unit","children":[]},{"level":3,"title":"服务单元（Service Unit）","slug":"服务单元-service-unit","link":"#服务单元-service-unit","children":[]}]},{"level":2,"title":"日志管理","slug":"日志管理","link":"#日志管理","children":[]},{"level":2,"title":"定时任务","slug":"定时任务","link":"#定时任务","children":[]},{"level":2,"title":"服务管理","slug":"服务管理","link":"#服务管理","children":[]},{"level":2,"title":"系统初始化","slug":"系统初始化","link":"#系统初始化","children":[{"level":3,"title":"用户会话","slug":"用户会话","link":"#用户会话","children":[]}]},{"level":2,"title":"内核管理","slug":"内核管理","link":"#内核管理","children":[{"level":3,"title":"网络管理","slug":"网络管理","link":"#网络管理","children":[]},{"level":3,"title":"设备管理","slug":"设备管理","link":"#设备管理","children":[]},{"level":3,"title":"cgroup 管理","slug":"cgroup-管理","link":"#cgroup-管理","children":[]}]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[{"level":3,"title":"systemctl","slug":"systemctl","link":"#systemctl","children":[]},{"level":3,"title":"journalctl","slug":"journalctl","link":"#journalctl","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"filePathRelative":"操作系统/Linux/systemd.md"}');export{o as comp,m as data};
