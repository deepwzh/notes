import{_ as a,c as s,a as n,o as l}from"./app-IvRFt9fL.js";const i={};function r(d,e){return l(),s("div",null,e[0]||(e[0]=[n(`<h1 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h1><h2 id="pod-管理相关" tabindex="-1"><a class="header-anchor" href="#pod-管理相关"><span>Pod 管理相关</span></a></h2><ol><li>删除僵死的 pod</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">kubectl delete pod xxxx -n xxxxx --force --grace-period=0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="存储类相关" tabindex="-1"><a class="header-anchor" href="#存储类相关"><span>存储类相关</span></a></h2><p>获取存在的存储类</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">kubectl get storageclass</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="节点管理" tabindex="-1"><a class="header-anchor" href="#节点管理"><span>节点管理</span></a></h2><h3 id="查看节点状态" tabindex="-1"><a class="header-anchor" href="#查看节点状态"><span>查看节点状态</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">kubectl get nodes <span class="token parameter variable">-o</span> wide</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="调度禁止与恢复" tabindex="-1"><a class="header-anchor" href="#调度禁止与恢复"><span>调度禁止与恢复</span></a></h3><p>使用 <code>kubectl cordon</code> 命令来禁止节点的调度能力</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">kubectl cordon <span class="token operator">&lt;</span>node-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果要在 Kubernetes 中关闭某个节点的禁止调度，则要使用 <code>kubectl uncordon</code> 命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">kubectl uncordon <span class="token operator">&lt;</span>node-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 <code>kubectl get nodes</code> 命令来检查节点的调度状态：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">kubectl get nodes <span class="token parameter variable">-o</span> wide</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在输出中，找到目标节点的状态列。如果节点的状态显示为 <code>Ready</code>，并且没有 <code>SchedulingDisabled</code> 的标记，说明节点已经恢复为可调度状态。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/change-default-storage-class/" target="_blank" rel="noopener noreferrer">改变默认 StorageClass</a></p>`,20)]))}const c=a(i,[["render",r]]),o=JSON.parse('{"path":"/%E4%BA%91%E5%8E%9F%E7%94%9F/K8s/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html","title":"常用命令","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Pod 管理相关","slug":"pod-管理相关","link":"#pod-管理相关","children":[]},{"level":2,"title":"存储类相关","slug":"存储类相关","link":"#存储类相关","children":[]},{"level":2,"title":"节点管理","slug":"节点管理","link":"#节点管理","children":[{"level":3,"title":"查看节点状态","slug":"查看节点状态","link":"#查看节点状态","children":[]},{"level":3,"title":"调度禁止与恢复","slug":"调度禁止与恢复","link":"#调度禁止与恢复","children":[]}]}],"git":{},"filePathRelative":"云原生/K8s/常用命令.md"}');export{c as comp,o as data};
